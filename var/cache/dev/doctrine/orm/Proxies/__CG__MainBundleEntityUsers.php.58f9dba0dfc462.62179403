<?php

namespace Proxies\__CG__\MainBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Users extends \MainBundle\Entity\Users implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'nom', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'prenom', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'mail', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'mdp', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'naissance', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'telephone', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'idUser', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'promoUser', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'roleUser', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'avatarUser', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'likesImg'];
        }

        return ['__isInitialized__', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'nom', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'prenom', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'mail', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'mdp', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'naissance', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'telephone', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'idUser', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'promoUser', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'roleUser', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'avatarUser', '' . "\0" . 'MainBundle\\Entity\\Users' . "\0" . 'likesImg'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Users $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom($prenom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', [$prenom]);

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', []);

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setMail($mail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMail', [$mail]);

        return parent::setMail($mail);
    }

    /**
     * {@inheritDoc}
     */
    public function getMail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMail', []);

        return parent::getMail();
    }

    /**
     * {@inheritDoc}
     */
    public function setMdp($mdp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMdp', [$mdp]);

        return parent::setMdp($mdp);
    }

    /**
     * {@inheritDoc}
     */
    public function getMdp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMdp', []);

        return parent::getMdp();
    }

    /**
     * {@inheritDoc}
     */
    public function setNaissance($naissance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNaissance', [$naissance]);

        return parent::setNaissance($naissance);
    }

    /**
     * {@inheritDoc}
     */
    public function getNaissance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNaissance', []);

        return parent::getNaissance();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelephone($telephone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelephone', [$telephone]);

        return parent::setTelephone($telephone);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelephone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelephone', []);

        return parent::getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUser()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdUser();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUser', []);

        return parent::getIdUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setPromoUser(\MainBundle\Entity\Promotions $promoUser = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPromoUser', [$promoUser]);

        return parent::setPromoUser($promoUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getPromoUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPromoUser', []);

        return parent::getPromoUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoleUser(\MainBundle\Entity\RolesUsers $roleUser = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoleUser', [$roleUser]);

        return parent::setRoleUser($roleUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoleUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoleUser', []);

        return parent::getRoleUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatarUser(\MainBundle\Entity\Photos $avatarUser = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatarUser', [$avatarUser]);

        return parent::setAvatarUser($avatarUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatarUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatarUser', []);

        return parent::getAvatarUser();
    }

    /**
     * {@inheritDoc}
     */
    public function addLikesImg(\MainBundle\Entity\Photos $likesImg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLikesImg', [$likesImg]);

        return parent::addLikesImg($likesImg);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLikesImg(\MainBundle\Entity\Photos $likesImg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLikesImg', [$likesImg]);

        return parent::removeLikesImg($likesImg);
    }

    /**
     * {@inheritDoc}
     */
    public function getLikesImg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLikesImg', []);

        return parent::getLikesImg();
    }

}
